<div className="flex flex-col  items-center justify-center md:min-h-screen">
  <img
    src={mobileBg}
    className="fixed bottom-0 w-screen bg-red-200 opacity-0 md:opacity-20 -top-3"
    alt=""
  />

  <Card
    className={`mt-8  duration-500  dark:bg-boxdark  opacity-100 mb-2  w-full md:w-[360px]  p-3 overflow-hidden m-auto bg-white md:p-4`}
    shadow={false}
  >
    {/* <div className={`w-40 rounded-full  duration-300  opacity-40 -z-0 -top-20 -left-20 h-40 absolute ${error ? "bg-red-300" : "bg-red-300"}`}
   ></div> */}

    {/* { loading && <div className="absolute top-0 left-0 z-50 w-full h-full bg-white opacity-70"></div> } */}
    <img src={logo} width="160" className="w-40 min-h-[100px] m-auto" alt="" />
    <Typography variant="h4" className="text-center dark:text-white">
      {t("login-title")}
    </Typography>
    <form
      className="mt-8 mb-2 duration-300"
      onSubmit={onSubmit}
      encType="multipart/form-data"
    >
      <div className="flex flex-col gap-6 mb-4">
        <div>
          <Input
            size="lg"
            color="gray"
            defaultValue={"22-RE100-120"}
            label={t("username").toString()}
            className="dark:text-white rtl:text-right"
            dir="ltr"
            required
            name="reg_no"
            autoComplete="off"
            min={3}
          />
        </div>
        <div className="relative flex w-full">
          <Input
            type={passVisible ? "text" : "password"}
            color="gray"
            size="lg"
            required
            defaultValue={"rana007"}
            label={t("password").toString()}
            name="password"
            className="dark:text-white "
          />
          <IconButton
            size="sm"
            variant="text"
            className="!absolute text-inherit  rtl:left-1  ltr:right-1 top-2 rounded"
            onClick={togglePassword}
          >
            <EyeIcon className="w-5 h-5" />
          </IconButton>
        </div>
        <Link to="/auth/user/reset-password" className="text-sm text-right">
          {t("Forgot Password?")}
        </Link>
      </div>
      <Checkbox
        label={
          <Typography
            variant="small"
            color="gray"
            className="flex items-center font-normal"
          >
            {t("remember-me")}
          </Typography>
        }
        name="remember"
        containerProps={{ className: "-ml-2.5" }}
      />
      <Typography
        variant="small"
        className={`text-red-300 duration-300 origin-top-left h-4 scale-x-0  ${
          error && "scale-x-100"
        }`}
      >
        {error}
      </Typography>

      {loading ? (
        <Spinner color="red" className="w-8 h-8 m-auto" />
      ) : (
        <Button
          type="submit"
          ripple={false}
          className={` mt-6  duration-300    flex gap-3 items-center text-center justify-center`}
          variant="outlined"
          color="red"
          fullWidth
        >
          {t("login")}
          <LockOpenIcon strokeWidth={2} className={` h-5 w-5 `} />
        </Button>
      )}
    </form>
    <Typography color="gray" className="mt-4 font-normal text-center">
      {t("brand-name")} | {t("app-name")}
    </Typography>
    <Typography color="gray" className="mt-4 font-normal text-center">
      2022-2023 Â© Software house Rana University
    </Typography>
    <div
    // className={`w-full animate-pulse ${loading ? 'scale-1' : 'scale-0'}  duration-300   opacity-40 -z-0 top-0 left-0 h-full absolute bg-gray-800`}
    ></div>
  </Card>

  {/* <SocialLinks /> */}
</div>;
